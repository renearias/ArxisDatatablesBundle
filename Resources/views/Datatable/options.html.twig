"displayStart": {{ view_options.displayStart }},


{% if false == view_use_integration_options %}
    "dom": "{{ view_options.dom|e('js')|raw }}",
{% endif %}

{% if true == view_use_sdom %}
    "sDom": "{{ view_options.sdom|e('js')|raw }}",
{% endif %}


"lengthMenu": {{ view_options.lengthMenu|length_join|raw }},

{% if view_options.orderClasses %}
    "orderClasses": true,
{% else %}
    "orderClasses": false,
{% endif %}

"order": [{{ view_options.order.column }}, "{{ view_options.order.direction }}"],

{% if view_options.orderMulti %}
    "orderMulti": true,
{% else %}
    "orderMulti": false,
{% endif %}

"pageLength": {{ view_options.pageLength }},

"pagingType": "{{ view_options.pagingType }}",

{% if false == view_use_integration_options %}
    "renderer": "{{ view_options.renderer }}",
{% endif %}

{% if view_options.scrollCollapse %}
    "scrollCollapse": true,
{% else %}
    "scrollCollapse": false,
{% endif %}

"stateDuration": {{ view_options.stateDuration }},

"stripeClasses": [{{ view_options.stripeClasses|join(", ")|json_encode|raw }}],

{% if view_options.responsive %}
    "responsive": true,
{% endif %}

{% if view_options.tabletools %}
   "oTableTools": {
	        	 "aButtons": [
	             "copy",
	             "csv",
	             "xls",
	                {
	                    "sExtends": "pdf",
	                    "sTitle": "Export_PDF",
	                    "sPdfMessage": "PDF Export",
	                    "sPdfSize": "A4"
	                }//,   //desactivated by responsive
	             
                        //{
                    	//"sExtends": "print",
                    	//"sMessage": "Generated by  Arxis <i>(press Esc to close)</i>"
                	//}
	             ],
	            "sSwfPath": "{{asset("js/plugin/datatables/swf/copy_csv_xls_pdf.swf")}}"
	        },
                
                        "preDrawCallback" : function() {
				// Initialize the responsive datatables helper once.
				if (!responsiveHelper_datatable_tabletools) {
                                        console.log(selector,breakpointDefinition,$(selector));
					responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($(selector), breakpointDefinition);
				}
			},
			"rowCallback" : function(nRow) {
				responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
			},
			"drawCallback" : function( oSettings ) {
				responsiveHelper_datatable_tabletools.respond();
			},
{% endif %}
{% if view_details_child_rows %}
"bDestroy":true,
"fnDrawCallback": function( oSettings ) {
		       runAllCharts();
		    },
{% endif %}